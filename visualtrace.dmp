<class 'bool'> False
clockCicle             : 158
Istruction Cache       : [('??', ' [c0:ff] IF miss')]
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : []
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
f2ToD                  : [('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5: 0', 'R6: 0', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 159
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc')]
f2ToD                  : [('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc'), ('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
Decode                 : [('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
dToE                   : [('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : [('??', 'R')]
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5: 0', 'R6: 0', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 160
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0')]
f2ToD                  : [('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0'), ('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc')]
Decode                 : [('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc')]
dToE                   : [('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc'), ('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
execute.inputBuffer0   : [('??', 'R')]
Stallo                 : []
Scoreboard             : [('R5', 'StableClock: 163', 'Dependency: mov   r5, #84'), ('R6', 'StableClock: 163', 'Dependency: mov   r6, #42')]
Execute                : [('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('0x10098', 'mov   r5, #84'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('0x1009c', 'mov   r6, #42'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5: 0', 'R6: 0', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 161
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0')]
f2ToD                  : [('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0'), ('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0')]
Decode                 : [('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0')]
dToE                   : [('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0'), ('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc')]
execute.inputBuffer0   : [('??', 'R')]
Stallo                 : []
Scoreboard             : [('R0', 'StableClock: 164', 'Dependency: andeq   r0, r0, r0'), ('R5', 'StableClock: 163', 'Dependency: mov   r5, #84'), ('R6', 'StableClock: 163', 'Dependency: mov   r6, #42')]
Execute                : [('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc')]
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('0x100a0', 'b   0xfffc'), ('0x10098', 'mov   r5, #84'), ('-', '-')]
Integer Core 1         : [('0x100a4', 'andeq   r0, r0, r0'), ('0x1009c', 'mov   r6, #42'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc'), ('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5: 0', 'R6: 0', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 162
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('0x100bc', 'andeq   r0, r0, r0'), ('0x100b8', 'andeq   r0, r0, r0')]
f2ToD                  : [('0x100bc', 'andeq   r0, r0, r0'), ('0x100b8', 'andeq   r0, r0, r0'), ('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0')]
Decode                 : [('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0')]
dToE                   : [('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0'), ('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0')]
execute.inputBuffer0   : [('??', 'R'), ('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0')]
Stallo                 : [('0x100ac', 'andeq   r0, r0, r0')]
Scoreboard             : [('R0', 'StableClock: 165', 'Dependency: andeq   r0, r0, r0'), ('R5', 'StableClock: 163', 'Dependency: mov   r5, #84'), ('R6', 'StableClock: 163', 'Dependency: mov   r6, #42')]
Execute                : [('0x100a8', 'andeq   r0, r0, r0')]
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('0x100a8', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc'), ('0x10098', 'mov   r5, #84')]
Integer Core 1         : [('-', '-'), ('0x100a4', 'andeq   r0, r0, r0'), ('0x1009c', 'mov   r6, #42')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x100a8', 'andeq   r0, r0, r0'), ('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc'), ('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5: 0', 'R6: 0', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 163
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('0x100bc', 'andeq   r0, r0, r0'), ('0x100b8', 'andeq   r0, r0, r0'), ('-', '-')]
Decode                 : [('0x100bc', 'andeq   r0, r0, r0'), ('0x100b8', 'andeq   r0, r0, r0')]
dToE                   : [('0x100bc', 'andeq   r0, r0, r0'), ('0x100b8', 'andeq   r0, r0, r0'), ('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0')]
execute.inputBuffer0   : [('??', 'R'), ('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0')]
Stallo                 : [('0x100b0', 'andeq   r0, r0, r0')]
Scoreboard             : [('R0', 'StableClock: 166', 'Dependency: andeq   r0, r0, r0')]
Execute                : [('0x100ac', 'andeq   r0, r0, r0')]
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('0x100a4', 'andeq   r0, r0, r0')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0'), ('0x100a4', 'andeq   r0, r0, r0'), ('0x100a0', 'b   0xfffc')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : [('0x1009c', 'mov   r6, #42'), ('0x10098', 'mov   r5, #84')]
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 164
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('0x100bc', 'andeq   r0, r0, r0'), ('0x100b8', 'andeq   r0, r0, r0'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : [('R0', 'StableClock: 166', 'Dependency: andeq   r0, r0, r0')]
Execute                : [('0x100bc', 'andeq   r0, r0, r0'), ('0x100b8', 'andeq   r0, r0, r0'), ('0x100b4', 'andeq   r0, r0, r0'), ('0x100b0', 'andeq   r0, r0, r0')]
eToF1                  : []
Integer Core 0         : [('-', '-'), ('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('0x100a4', 'andeq   r0, r0, r0')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x100ac', 'andeq   r0, r0, r0'), ('0x100a8', 'andeq   r0, r0, r0'), ('0x100a4', 'andeq   r0, r0, r0')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : [('0x100a0', 'b   0xfffc')]
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 165
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : [('R0', 'StableClock: 166', 'Dependency: andeq   r0, r0, r0')]
Execute                : []
eToF1                  : []
Integer Core 0         : [('-', '-'), ('-', '-'), ('0x100ac', 'andeq   r0, r0, r0')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x100ac', 'andeq   r0, r0, r0')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : [('0x100a8', 'andeq   r0, r0, r0'), ('0x100a4', 'andeq   r0, r0, r0')]
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 166
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : [('0x100ac', 'andeq   r0, r0, r0')]
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 197
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 253
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 258
Istruction Cache       : [('??', ' addr 0xc0 (ns) moving from state 0 to state: 7 (E) valid: 1 writable: 1 readable: 1 dirty: 0 | tag: 0 set: 0x3 way: 0'), ('??', ' for addr 0xc0 being updated in Cache')]
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : []
f2ToF1                 : []
Fetch2                 : []
f2ToD                  : []
Decode                 : []
dToE                   : []
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : []
Integer Core 0         : []
Integer Core 1         : []
execute.fu.2           : []
execute.fu.3           : []
execute.fu.4           : []
execute.fu.5           : []
execute.fu.6           : []
execute.fu.7           : []
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 260
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 261
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 262
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : [('??', '0/2.1/3')]
f1ToF2                 : []
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 263
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : []
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-'), ('0x200a4 ', 'Generic page table fault')]
f2ToD                  : [('-', '-'), ('0x200a4 ', 'Generic page table fault'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 264
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('0x200a4 ', 'Generic page table fault'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('0x200a4 ', 'Generic page table fault'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : [('??', 'R')]
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 265
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('0x200a4 ', 'Generic page table fault'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : [('0x200a4 ', 'Generic page table fault')]
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('0x200a4 ', 'Generic page table fault'), ('-', '-'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x200a4 ', 'Generic page table fault')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 266
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('0x200a4 ', 'Generic page table fault'), ('-', '-')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x200a4 ', 'Generic page table fault')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 267
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
f2ToF1                 : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Fetch2                 : [('-', '-')]
f2ToD                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Decode                 : []
dToE                   : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
Integer Core 0         : [('-', '-'), ('-', '-'), ('0x200a4 ', 'Generic page table fault')]
Integer Core 1         : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.2           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.3           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.4           : [('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.5           : [('-', '-'), ('-', '-'), ('-', '-')]
execute.fu.6           : [('-', '-')]
execute.fu.7           : [('-', '-')]
execute.inFlightInsts0 : [('0x200a4 ', 'Generic page table fault')]
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

clockCicle             : 268
Istruction Cache       : []
fetch1.transfers       : []
Fetch1                 : []
f1ToF2                 : []
f2ToF1                 : []
Fetch2                 : []
f2ToD                  : []
Decode                 : []
dToE                   : []
execute.inputBuffer0   : []
Stallo                 : []
Scoreboard             : []
Execute                : []
eToF1                  : []
Integer Core 0         : []
Integer Core 1         : []
execute.fu.2           : []
execute.fu.3           : []
execute.fu.4           : []
execute.fu.5           : []
execute.fu.6           : []
execute.fu.7           : []
execute.inFlightInsts0 : []
execute.lsq.transfers  : []
execute.lsq.storeBuffer: []
execute.inFUMemInsts0  : []
Data Cache             : []
completed              : []
['R0:  0', 'R1:  0xbeffffce', 'R2:  0', 'R3: 0', 'R4: 0', 'R5:  0x54', 'R6:  0x2a', 'R7: 0', 'R8: 0', 'R9: 0', 'R10: 0', 'R11: 0', 'R12: 0', 'R13:  0xbeffff40', 'R14: 0', 'R15: 0']

